// protoc --go_out=. --go-grpc_out=. proto/copy.proto

syntax="proto3";

option go_package = "./proto";

service UploaderIngestService {
  rpc CopyFile(IncomingOrder) returns (Status) {};
}

service UploaderHandlerService {
  rpc TenantHasAccess(UploaderAccessObject) returns (Status) {};
  rpc SaveObjectAndFiles(ObjectAndFiles) returns (Id);
  rpc AlterStatus(StatusObject) returns (Status){}
}

service ClerkIngestService {
  rpc CreateStoragePartition(StoragePartition) returns (Status) {};
}

service IngestHandlerService {
  rpc GetStorageLocationsByCollectionAlias(CollectionAlias) returns (StorageLocations){};
  rpc GetCurrentStorageLocationsByCollectionAlias(CollectionAlias) returns (StorageLocations){};
  rpc GetStoragePartitionForLocation(SizeAndId) returns (StoragePartition);
  rpc SaveInstanceAndUpdatePartition(InstanceAndPartition) returns (Status);
  rpc GetStorageLocationById(Id) returns (StorageLocation);
  rpc GetAndSaveStoragePartitionWithRelevantAlias(StoragePartition) returns (StoragePartition);
  rpc UpdateStoragePartition(StoragePartition) returns (Status);
  rpc GetObjectsByCollectionAlias(CollectionAlias) returns (Objects);
  rpc GetObjectsInstancesByObjectId(Id) returns (ObjectInstances);
  rpc CreateObjectInstance(ObjectInstance) returns (Id);
  rpc GetStoragePartitionsByStorageLocationId(Id) returns (StoragePartitions);
  rpc DeleteObjectInstance(Id) returns (Status);
  rpc AlterStatus(StatusObject) returns (Status){}
}

service ClerkHandlerService {

  rpc FindTenantById(Id) returns (Tenant){};
  rpc DeleteTenant(Id) returns (Status){};
  rpc SaveTenant(Tenant) returns (Status){};
  rpc UpdateTenant(Tenant) returns (Status){};
  rpc FindAllTenants(NoParam) returns (Tenants){};

  rpc GetStorageLocationsByTenantId(Id) returns (StorageLocations){};
  rpc SaveStorageLocation(StorageLocation) returns (Status){};
  rpc DeleteStorageLocationById(Id) returns (Status){};

  rpc GetCollectionsByTenantId(Id) returns (Collections){};
  rpc GetCollectionById(Id) returns (Collection){};
  rpc DeleteCollectionById(Id) returns (Status){};
  rpc CreateCollection(Collection) returns (Status){};
  rpc UpdateCollection(Collection) returns (Status){};

  rpc GetObjectById(Id) returns (Object){};
  rpc GetObjectInstanceById(Id) returns (ObjectInstance){};
  rpc GetFileById(Id) returns (File){};
  rpc GetObjectInstanceCheckById(Id) returns (ObjectInstanceCheck){};
  rpc GetStorageLocationById(Id) returns (StorageLocation){};
  rpc GetStoragePartitionById(Id) returns (StoragePartition){};

  rpc FindAllTenantsPaginated(Pagination) returns (Tenants){};
  rpc GetCollectionsByTenantIdPaginated(Pagination) returns (Collections){};
  rpc GetObjectsByCollectionIdPaginated(Pagination) returns (Objects){}
  rpc GetFilesByCollectionIdPaginated(Pagination) returns (Files){}
  rpc GetMimeTypesForCollectionId(Pagination) returns (MimeTypes){}
  rpc GetPronomsForCollectionId(Pagination) returns (Pronoms){}
  rpc GetObjectInstancesByObjectIdPaginated(Pagination) returns (ObjectInstances){}
  rpc GetFilesByObjectIdPaginated(Pagination) returns (Files){}
  rpc GetObjectInstanceChecksByObjectInstanceIdPaginated(Pagination) returns (ObjectInstanceChecks){}

  rpc GetStorageLocationsByTenantIdPaginated(Pagination) returns (StorageLocations){}
  rpc GetStoragePartitionsByLocationIdPaginated(Pagination) returns (StoragePartitions){}
  rpc GetObjectInstancesByStoragePartitionIdPaginated(Pagination) returns (ObjectInstances){}

  rpc CheckStatus(Id) returns (StatusObject){}
  rpc CreateStatus(StatusObject) returns (Id){}
  rpc AlterStatus(StatusObject) returns (Status){}
}

service DispatcherHandlerService {
  rpc GetLowQualityCollections(NoParam) returns (CollectionAliases) {};
}

service DispatcherIngestService {
  rpc ChangeQualityForCollections(CollectionAliases) returns (Status) {};
}

message NoParam {}

message StatusObject {
  string Id = 1;
  string Status = 2;
  string LastChanged = 3;
}

message UploaderAccessObject {
  string Key = 1;
  string Collection = 2;
}

message Pagination {
  string Id = 1;
  string SecondId = 2;
  int32 Skip = 3;
  int32 Take = 4;
  string SortDirection = 5;
  string SortKey = 6;
  repeated string AllowedTenants = 7;
  string searchField = 8;
}

message IncomingOrder {
  string CollectionAlias = 1;
  string StatusId =2;
  string FilePath = 3;
  string InfoFilePath = 4;
  Object Object = 5;

}

message Collection {
  string Alias = 1;
  string Description = 2;
  string Owner = 3;
  string OwnerMail = 4;
  string Name = 5;
  int32 Quality = 6;
  string TenantId = 7;
  string Id = 8;
  int64 TotalFileSize = 9;
  int32 TotalFileCount = 10;
  int32 TotalObjectCount = 11;
}

message Collections {
  repeated Collection collections = 1;
  int32 TotalItems = 2;
}

message CollectionAlias {
  string CollectionAlias = 1;
}

message CollectionAliases {
  repeated CollectionAlias CollectionAliases = 1;
}

message Id {
  string Id = 1;
}

message Ids {
  repeated Id Ids= 1;
}

message Tenant {
  string Id = 1;
  string Name = 2;
  string Alias = 3;
  string Person = 4;
  string Email = 5;
  string ApiKeyId = 6;
}

message Tenants {
  repeated Tenant tenants = 1;
  int32 TotalItems = 2;
}

message Status {
  bool ok = 1;
}

message Object {
  string Signature = 1;
  repeated  string Sets = 2;
  repeated  string Identifiers = 3 ;
  string Title = 4;
  repeated string AlternativeTitles = 5;
  string Description = 6;
  repeated string Keywords = 7;
  repeated string References = 8;
  string IngestWorkflow = 9;
  string User = 10;
  string Address = 11;
  string Created = 12;
  string LastChanged = 13;
  int64 Size = 14;
  string CollectionId =15;
  string Checksum = 16;
  string Id = 17;
  int64 TotalFileSize = 18;
  int32 TotalFileCount = 19;
  string Collection = 20;
}

message Objects {
  repeated Object Objects = 1;
  int32 TotalItems = 2;
}

message ObjectInstance {
  string  Path = 1;
  int64 Size = 2;
  string Created = 3;
  string Status = 4;
  string StoragePartitionId = 5;
  string ObjectId = 6;
  string Id = 7;
}

message ObjectInstances {
  repeated ObjectInstance ObjectInstances = 1;
  int32 TotalItems = 2;
}

message ObjectAndFiles {
  string  CollectionAlias = 1;
  Object  Object = 2;
  repeated File Files = 3;
}

message InstanceAndPartition {
  ObjectInstance ObjectInstance = 1;
  StoragePartition storagePartition = 2;
}

message StorageLocations {
  repeated StorageLocation storageLocations = 1;
  int32 TotalItems = 2;
}

message StorageLocation {
  string  alias = 1;
  string  type = 2;
  string  vault = 3;
  string  connection = 4;
  int32   quality = 5;
  int32   price = 6;
  string  security_compliency = 7;
  bool    fill_first = 8;
  string  ocfl_type = 9;
  string  tenant_id = 10;
  string  id = 11;
  int32   number_of_threads = 12;
  int64   totalExistingVolume = 13;
  int64   totalFilesSize = 14;
}

message StoragePartition {
  string  alias = 1;
  string  name = 2;
  int64  max_size = 3;
  int64  max_objects = 4;
  int64   current_size = 5;
  int64   current_objects = 6;
  string  id = 7;
  string  storage_location_id = 8;
}

message StoragePartitions {
  repeated StoragePartition StoragePartitions = 1;
  int32 TotalItems = 2;
}

message SizeAndId {
  int64  size = 1;
  string  id = 2;
}

message File {
  string Checksum = 1;
  repeated string  Name = 2;
  int64    Size = 3;
  string  MimeType = 4;
  string  Pronom = 5;
  int64 Width = 6;
  int64 Height = 7;
  int64  Duration = 8;
  string Id = 9;
  string ObjectId = 10;
}

message Files {
  repeated File Files = 1;
  int32 TotalItems = 2;
}

message ObjectInstanceCheck {
  string CheckTime = 1;
  bool Error = 2;
  string Message = 3;
  string Id = 4;
  string ObjectInstanceId = 5;
}

message ObjectInstanceChecks {
  repeated ObjectInstanceCheck ObjectInstanceChecks = 1;
  int32 TotalItems = 2;
}

message MimeType {
  string Id = 1;
  int32  FileCount = 2;
}

message MimeTypes {
  repeated MimeType MimeTypes = 1;
  int32 TotalItems = 2;
}

message Pronom {
  string Id = 1;
  int32  FileCount = 2;
}

message Pronoms {
  repeated Pronom Pronoms = 1;
  int32 TotalItems = 2;
}